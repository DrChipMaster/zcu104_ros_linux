#@TYPE: Machine
#@NAME: virt-versal
#@DESCRIPTION: QEMU machine for versal device

require conf/machine/include/tune-versal.inc
require conf/machine/include/machine-xilinx-overrides.inc
require conf/machine/include/machine-xilinx-default.inc
require conf/machine/include/machine-xilinx-qemu.inc

SOC_VARIANT ?= "virt"

MACHINE_FEATURES = "rtc ext2 ext3 vfat usbhost"

UBOOT_MACHINE = "xilinx_versal_virt_defconfig"

SERIAL_CONSOLE ?= "115200 ttyAMA0"

SERIAL_CONSOLES_CHECK = "${SERIAL_CONSOLES}"

PREFERRED_PROVIDER_virtual/kernel ?= "linux-xlnx"
PREFERRED_PROVIDER_virtual/bootloader ?= "u-boot-xlnx"
PREFERRED_PROVIDER_qemu-helper-native = "qemu-xilinx-helper-native"

EXTRA_IMAGEDEPENDS += " \
               arm-trusted-firmware \
               qemu-devicetrees \
               virtual/bootloader \
               virtual/boot-bin \
               plm \
               psm-firmware \
               u-boot-zynq-scr \
               "

IMAGE_BOOT_FILES += "boot.bin system.dtb Image boot.scr"

# Default SD image build configuration, use qemu-sd to pad
IMAGE_CLASSES += "image-types-xilinx-qemu"
IMAGE_FSTYPES += "wic.qemu-sd"
WKS_FILES ?= "sdimage-bootpart.wks"

# This machine has a QEMU model, runqemu setup:
IMAGE_CLASSES += "qemuboot-xilinx"
QB_MACHINE = "-M arm-generic-fdt"
QB_MEM = "-m 4096"
QB_DEFAULT_KERNEL = "none"
QB_NETWORK_DEVICE = ""
QB_KERNEL_CMDLINE_APPEND ?= ""
QB_NET = "none"
QB_ROOTFS = "none"

# Use the multiarch script instead of launching QEMU directly
# Use booti 80000 6000000 4000000 to launch
QB_SYSTEM_NAME_append = "-multiarch"

QB_OPT_APPEND ?= " -serial null -serial null -serial mon:stdio -display none"

QB_OPT_APPEND_append_qemuboot-xilinx = " \
    -boot mode=1 \
    -drive file=${DEPLOY_DIR_IMAGE}/QEMU_qspi-${MACHINE}.bin,format=raw,if=mtd,index=0 \
    -device loader,file=${DEPLOY_DIR_IMAGE}/Image,addr=0x80000 \
    -device loader,file=${DEPLOY_DIR_IMAGE}/${IMAGE_BASENAME}-${MACHINE}.cpio.gz.u-boot,addr=0x6000000 \
    -device loader,file=${DEPLOY_DIR_IMAGE}/system.dtb,addr=0x4000000 \
    -hw-dtb ${DEPLOY_DIR_IMAGE}/qemu-hw-devicetrees/multiarch/board-versal-ps-virt.dtb \
    -display none \
    -net nic -net user,tftp=${DEPLOY_DIR_IMAGE} \
    "

# PLM instance args
QB_PLM_OPT = " \
    -M microblaze-fdt \
    -device loader,file=${DEPLOY_DIR_IMAGE}/BOOT-${MACHINE}_bh.bin,addr=0xF201E000,force-raw  \
    -device loader,addr=0xf0000000,data=0xba020004,data-len=4 \
    -device loader,addr=0xf0000004,data=0xb800fffc,data-len=4 \
    -device loader,file=${DEPLOY_DIR_IMAGE}/CDO/pmc_cdo.bin,addr=0xf2000000,force-raw \
    -device loader,file=${DEPLOY_DIR_IMAGE}/plm-${MACHINE}.elf,cpu-num=1 \
    -device loader,addr=0xF1110624,data=0x0,data-len=4 \
    -device loader,addr=0xF1110620,data=0x1,data-len=4 \
    -hw-dtb ${DEPLOY_DIR_IMAGE}/qemu-hw-devicetrees/multiarch/board-versal-pmc-virt.dtb \
    -display none \
    "
QB_OPT_APPEND_append_qemuboot-xilinx = " -plm-args '${QB_PLM_OPT}'"

